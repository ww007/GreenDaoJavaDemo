package de.greenrobot.daoexample;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import de.greenrobot.daoexample.Item;
import de.greenrobot.daoexample.School;
import de.greenrobot.daoexample.Grade;
import de.greenrobot.daoexample.Class;
import de.greenrobot.daoexample.Student;
import de.greenrobot.daoexample.StudentItem;
import de.greenrobot.daoexample.RoundResult;

import de.greenrobot.daoexample.ItemDao;
import de.greenrobot.daoexample.SchoolDao;
import de.greenrobot.daoexample.GradeDao;
import de.greenrobot.daoexample.ClassDao;
import de.greenrobot.daoexample.StudentDao;
import de.greenrobot.daoexample.StudentItemDao;
import de.greenrobot.daoexample.RoundResultDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig itemDaoConfig;
    private final DaoConfig schoolDaoConfig;
    private final DaoConfig gradeDaoConfig;
    private final DaoConfig classDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig studentItemDaoConfig;
    private final DaoConfig roundResultDaoConfig;

    private final ItemDao itemDao;
    private final SchoolDao schoolDao;
    private final GradeDao gradeDao;
    private final ClassDao classDao;
    private final StudentDao studentDao;
    private final StudentItemDao studentItemDao;
    private final RoundResultDao roundResultDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        itemDaoConfig = daoConfigMap.get(ItemDao.class).clone();
        itemDaoConfig.initIdentityScope(type);

        schoolDaoConfig = daoConfigMap.get(SchoolDao.class).clone();
        schoolDaoConfig.initIdentityScope(type);

        gradeDaoConfig = daoConfigMap.get(GradeDao.class).clone();
        gradeDaoConfig.initIdentityScope(type);

        classDaoConfig = daoConfigMap.get(ClassDao.class).clone();
        classDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        studentItemDaoConfig = daoConfigMap.get(StudentItemDao.class).clone();
        studentItemDaoConfig.initIdentityScope(type);

        roundResultDaoConfig = daoConfigMap.get(RoundResultDao.class).clone();
        roundResultDaoConfig.initIdentityScope(type);

        itemDao = new ItemDao(itemDaoConfig, this);
        schoolDao = new SchoolDao(schoolDaoConfig, this);
        gradeDao = new GradeDao(gradeDaoConfig, this);
        classDao = new ClassDao(classDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        studentItemDao = new StudentItemDao(studentItemDaoConfig, this);
        roundResultDao = new RoundResultDao(roundResultDaoConfig, this);

        registerDao(Item.class, itemDao);
        registerDao(School.class, schoolDao);
        registerDao(Grade.class, gradeDao);
        registerDao(Class.class, classDao);
        registerDao(Student.class, studentDao);
        registerDao(StudentItem.class, studentItemDao);
        registerDao(RoundResult.class, roundResultDao);
    }
    
    public void clear() {
        itemDaoConfig.getIdentityScope().clear();
        schoolDaoConfig.getIdentityScope().clear();
        gradeDaoConfig.getIdentityScope().clear();
        classDaoConfig.getIdentityScope().clear();
        studentDaoConfig.getIdentityScope().clear();
        studentItemDaoConfig.getIdentityScope().clear();
        roundResultDaoConfig.getIdentityScope().clear();
    }

    public ItemDao getItemDao() {
        return itemDao;
    }

    public SchoolDao getSchoolDao() {
        return schoolDao;
    }

    public GradeDao getGradeDao() {
        return gradeDao;
    }

    public ClassDao getClassDao() {
        return classDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public StudentItemDao getStudentItemDao() {
        return studentItemDao;
    }

    public RoundResultDao getRoundResultDao() {
        return roundResultDao;
    }

}
